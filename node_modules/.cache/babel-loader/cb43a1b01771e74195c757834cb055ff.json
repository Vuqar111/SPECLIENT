{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from '../constants/productConstants';\nexport const listProducts = _ref => {\n  let {\n    name = ''\n  } = _ref;\n  return async dispatch => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/products`);\n      console.log(data);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data.products\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/t-shirtdemo/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL","listProducts","name","dispatch","type","data","get","console","log","payload","products","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_LIST_SUCCESS,\n  PRODUCT_CATEGORY_LIST_REQUEST,\n  PRODUCT_CATEGORY_LIST_FAIL,\n  PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = ({\n  name = '',\n}) => async (\n  dispatch\n) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(\n      `/api/products`\n    );\n    console.log(data)\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.products });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\n\n\n\nexport const listProductCategories = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/products/categories`);\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\n\n\n\n\n\n\n\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      '/api/products',\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n  }\n};\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};\n\n\nexport const createReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};"]},"metadata":{},"sourceType":"module"}