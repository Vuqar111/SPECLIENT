{"ast":null,"code":"import Axios from 'axios';\nimport { BLOG_CREATE_FAIL, BLOG_CREATE_REQUEST, BLOG_CREATE_SUCCESS, BLOG_DETAILS_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_LIST_FAIL, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, BLOG_UPDATE_REQUEST, BLOG_UPDATE_SUCCESS, BLOG_UPDATE_FAIL, BLOG_DELETE_REQUEST, BLOG_DELETE_FAIL, BLOG_DELETE_SUCCESS, BLOG_CATEGORY_LIST_SUCCESS, BLOG_CATEGORY_LIST_REQUEST, BLOG_CATEGORY_LIST_FAIL, BLOG_REVIEW_CREATE_REQUEST, BLOG_REVIEW_CREATE_SUCCESS, BLOG_REVIEW_CREATE_FAIL } from '../constants/blogConstants';\nexport const listBlogs = () => async dispatch => {\n  dispatch({\n    type: BLOG_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/blogs`);\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: data.blogs\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsBlog = blogId => async dispatch => {\n  dispatch({\n    type: BLOG_DETAILS_REQUEST,\n    payload: blogId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (productId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/spetshirtwebsite/frontend/src/actions/blogActions.js"],"names":["Axios","BLOG_CREATE_FAIL","BLOG_CREATE_REQUEST","BLOG_CREATE_SUCCESS","BLOG_DETAILS_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_LIST_FAIL","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_UPDATE_REQUEST","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_FAIL","BLOG_DELETE_SUCCESS","BLOG_CATEGORY_LIST_SUCCESS","BLOG_CATEGORY_LIST_REQUEST","BLOG_CATEGORY_LIST_FAIL","BLOG_REVIEW_CREATE_REQUEST","BLOG_REVIEW_CREATE_SUCCESS","BLOG_REVIEW_CREATE_FAIL","listBlogs","dispatch","type","data","get","payload","blogs","error","message","detailsBlog","blogId","productId","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","response","createProduct","getState","PRODUCT_CREATE_REQUEST","userSignin","userInfo","post","headers","Authorization","token","PRODUCT_CREATE_SUCCESS","product","PRODUCT_CREATE_FAIL","updateProduct","PRODUCT_UPDATE_REQUEST","put","_id","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","deleteProduct","PRODUCT_DELETE_REQUEST","delete","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","createReview","review","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_REVIEW_CREATE_FAIL"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  BLOG_CREATE_FAIL,\r\n  BLOG_CREATE_REQUEST,\r\n  BLOG_CREATE_SUCCESS,\r\n  BLOG_DETAILS_FAIL,\r\n  BLOG_DETAILS_REQUEST,\r\n  BLOG_DETAILS_SUCCESS,\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n  BLOG_UPDATE_REQUEST,\r\n  BLOG_UPDATE_SUCCESS,\r\n  BLOG_UPDATE_FAIL,\r\n  BLOG_DELETE_REQUEST,\r\n  BLOG_DELETE_FAIL,\r\n  BLOG_DELETE_SUCCESS,\r\n  BLOG_CATEGORY_LIST_SUCCESS,\r\n  BLOG_CATEGORY_LIST_REQUEST,\r\n  BLOG_CATEGORY_LIST_FAIL,\r\n  BLOG_REVIEW_CREATE_REQUEST,\r\n  BLOG_REVIEW_CREATE_SUCCESS,\r\n  BLOG_REVIEW_CREATE_FAIL,\r\n} from '../constants/blogConstants';\r\n\r\nexport const listBlogs = () => async (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: BLOG_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/blogs`\r\n    );\r\n    dispatch({ type: BLOG_LIST_SUCCESS, payload: data.blogs });\r\n  } catch (error) {\r\n    dispatch({ type: BLOG_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const detailsBlog = (blogId) => async (dispatch) => {\r\n  dispatch({ type: BLOG_DETAILS_REQUEST, payload: blogId });\r\n  try {\r\n    const { data } = await Axios.get(`/api/products/${productId}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/products',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\n\r\nexport const createReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\r\n      payload: data.review,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}