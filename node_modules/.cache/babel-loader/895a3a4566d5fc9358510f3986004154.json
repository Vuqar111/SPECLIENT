{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\spetshirtwebsite\\\\frontend\\\\src\\\\screens\\\\RecordEditScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { detailsBlog, updateBlog } from '../actions/recordActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { RECORD_UPDATE_RESET } from '../constants/recordConstants';\nexport default function BlogEditScreen(props) {\n  const recordId = props.match.params.id;\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [url, setUrl] = useState('');\n  const recordDetails = useSelector(state => state.recordDetails);\n  const {\n    loading,\n    error,\n    record\n  } = recordDetails;\n  const recordUpdate = useSelector(state => state.recordUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = recordUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/recordlist');\n    }\n\n    if (!record || record._id !== recordId || successUpdate) {\n      dispatch({\n        type: RECORD_UPDATE_RESET\n      });\n      dispatch(detailsRecord(recordId));\n    } else {\n      setTitle(record.title);\n      setAuthor(record.author);\n      setImage(record.image);\n      setCategory(record.category);\n      setUrl(record.url);\n    }\n  }, [record, dispatch, recordId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // TODO: dispatch update record\n\n    dispatch(updateRecord({\n      _id: recordId,\n      title,\n      author,\n      image,\n      category,\n      url\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Create / Edit Record \", recordId)), loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 27\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"author\",\n    type: \"text\",\n    placeholder: \"Enter author\",\n    value: author,\n    onChange: e => setAuthor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"image\",\n    type: \"text\",\n    placeholder: \"Enter image\",\n    value: image,\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Image File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"imageFile\",\n    label: \"Choose Image\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), loadingUpload && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }), errorUpload && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, errorUpload)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"category\",\n    type: \"text\",\n    placeholder: \"Enter category\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Url\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"text\",\n    placeholder: \"Enter Url\",\n    value: url,\n    onChange: e => setUrl(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Update/Create Record\")))));\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/spetshirtwebsite/frontend/src/screens/RecordEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Axios","detailsBlog","updateBlog","LoadingBox","MessageBox","RECORD_UPDATE_RESET","BlogEditScreen","props","recordId","match","params","id","title","setTitle","author","setAuthor","image","setImage","category","setCategory","url","setUrl","recordDetails","state","loading","error","record","recordUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","type","detailsRecord","submitHandler","e","preventDefault","updateRecord","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { detailsBlog, updateBlog } from '../actions/recordActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { RECORD_UPDATE_RESET } from '../constants/recordConstants';\r\n\r\nexport default function BlogEditScreen(props) {\r\n  const recordId = props.match.params.id;\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  const recordDetails = useSelector((state) => state.recordDetails);\r\n  const { loading, error, record } = recordDetails;\r\n\r\n  const recordUpdate = useSelector((state) => state.recordUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = recordUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/recordlist');\r\n    }\r\n    if (!record || record._id !== recordId || successUpdate) {\r\n      dispatch({ type: RECORD_UPDATE_RESET });\r\n      dispatch(detailsRecord(recordId));\r\n    } else {\r\n      setTitle(record.title);\r\n      setAuthor(record.author);\r\n      setImage(record.image);\r\n      setCategory(record.category);\r\n      setUrl(record.url);\r\n    }\r\n  }, [record, dispatch, recordId, successUpdate, props.history]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // TODO: dispatch update record\r\n    dispatch(\r\n      updateRecord({\r\n        _id: recordId,\r\n        title,\r\n        author,\r\n        image,\r\n        category,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState('');\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create / Edit Record {recordId}</h1>\r\n        </div>\r\n        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Title</label>\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"author\">Author</label>\r\n              <input\r\n                id=\"author\"\r\n                type=\"text\"\r\n                placeholder=\"Enter author\"\r\n                value={author}\r\n                onChange={(e) => setAuthor(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"image\">Image</label>\r\n              <input\r\n                id=\"image\"\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"imageFile\">Image File</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageFile\"\r\n                label=\"Choose Image\"\r\n                onChange={uploadFileHandler}\r\n              ></input>\r\n              {loadingUpload && <LoadingBox></LoadingBox>}\r\n              {errorUpload && (\r\n                <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input\r\n                id=\"category\"\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"url\">Url</label>\r\n              <input\r\n                id=\"url\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Url\"\r\n                value={url}\r\n                onChange={(e) => setUrl(e.target.value)}\r\n              ></input>\r\n            </div>\r\n          \r\n            \r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update/Create Record\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}