{"ast":null,"code":"import Axios from 'axios';\nimport { GALLERY_CREATE_FAIL, GALLERY_CREATE_REQUEST, GALLERY_CREATE_SUCCESS, GALLERY_DETAILS_FAIL, GALLERY_DETAILS_REQUEST, GALLERY_DETAILS_SUCCESS, GALLERY_LIST_FAIL, GALLERY_LIST_REQUEST, GALLERY_LIST_SUCCESS, GALLERY_UPDATE_REQUEST, GALLERY_UPDATE_SUCCESS, GALLERY_UPDATE_FAIL, GALLERY_DELETE_REQUEST, GALLERY_DELETE_FAIL, GALLERY_DELETE_SUCCESS } from '../constants/galleryConstants';\nexport const listGalleries = () => async dispatch => {\n  dispatch({\n    type: GALLERY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/galleries`);\n    dispatch({\n      type: GALLERY_LIST_SUCCESS,\n      payload: data.galleries\n    });\n  } catch (error) {\n    dispatch({\n      type: GALLERY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsGallery = galleryId => async dispatch => {\n  dispatch({\n    type: GALLERY_DETAILS_REQUEST,\n    payload: galleryId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/galleries/${galleryId}`);\n    dispatch({\n      type: GALLERY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GALLERY_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createGallery = () => async (dispatch, getState) => {\n  dispatch({\n    type: GALLERY_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/galleries', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GALLERY_CREATE_SUCCESS,\n      payload: data.gallery\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GALLERY_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBook = gallery => async (dispatch, getState) => {\n  dispatch({\n    type: GALLERY_UPDATE_REQUEST,\n    payload: gallery\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/galleries/${gallery._id}`, gallery, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GALLERY_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GALLERY_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteBook = galleryId => async (dispatch, getState) => {\n  dispatch({\n    type: GALLERY_DELETE_REQUEST,\n    payload: galleryId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/galleries/${galleryId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: GALLERY_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GALLERY_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/spetshirtwebsite/frontend/src/actions/galleryActions.js"],"names":["Axios","GALLERY_CREATE_FAIL","GALLERY_CREATE_REQUEST","GALLERY_CREATE_SUCCESS","GALLERY_DETAILS_FAIL","GALLERY_DETAILS_REQUEST","GALLERY_DETAILS_SUCCESS","GALLERY_LIST_FAIL","GALLERY_LIST_REQUEST","GALLERY_LIST_SUCCESS","GALLERY_UPDATE_REQUEST","GALLERY_UPDATE_SUCCESS","GALLERY_UPDATE_FAIL","GALLERY_DELETE_REQUEST","GALLERY_DELETE_FAIL","GALLERY_DELETE_SUCCESS","listGalleries","dispatch","type","data","get","payload","galleries","error","message","detailsGallery","galleryId","response","createGallery","getState","userSignin","userInfo","post","headers","Authorization","token","gallery","updateBook","put","_id","deleteBook","delete"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  GALLERY_CREATE_FAIL,\r\n  GALLERY_CREATE_REQUEST,\r\n  GALLERY_CREATE_SUCCESS,\r\n  GALLERY_DETAILS_FAIL,\r\n  GALLERY_DETAILS_REQUEST,\r\n  GALLERY_DETAILS_SUCCESS,\r\n  GALLERY_LIST_FAIL,\r\n  GALLERY_LIST_REQUEST,\r\n  GALLERY_LIST_SUCCESS,\r\n  GALLERY_UPDATE_REQUEST,\r\n  GALLERY_UPDATE_SUCCESS,\r\n  GALLERY_UPDATE_FAIL,\r\n  GALLERY_DELETE_REQUEST,\r\n  GALLERY_DELETE_FAIL,\r\n  GALLERY_DELETE_SUCCESS,\r\n} from '../constants/galleryConstants';\r\n\r\nexport const listGalleries = () => async (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: GALLERY_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/galleries`\r\n    );\r\n    dispatch({ type: GALLERY_LIST_SUCCESS, payload: data.galleries });\r\n  } catch (error) {\r\n    dispatch({ type: GALLERY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const detailsGallery = (galleryId) => async (dispatch) => {\r\n  dispatch({ type: GALLERY_DETAILS_REQUEST, payload: galleryId });\r\n  try {\r\n    const { data } = await Axios.get(`/api/galleries/${galleryId}`);\r\n    dispatch({ type: GALLERY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GALLERY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const createGallery = () => async (dispatch, getState) => {\r\n  dispatch({ type: GALLERY_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.post(\r\n      '/api/galleries',\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: GALLERY_CREATE_SUCCESS,\r\n      payload: data.gallery,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: GALLERY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateBook = (gallery) => async (dispatch, getState) => {\r\n  dispatch({ type: GALLERY_UPDATE_REQUEST, payload: gallery });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/galleries/${gallery._id}`, gallery, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: GALLERY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: GALLERY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteBook = (galleryId) => async (dispatch, getState) => {\r\n  dispatch({ type: GALLERY_DELETE_REQUEST, payload: galleryId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = Axios.delete(`/api/galleries/${galleryId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: GALLERY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: GALLERY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}